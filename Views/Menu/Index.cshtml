@model IEnumerable<SoccerShoesShop.Areas.Admin.Models.Product>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .no-products {
        text-align: center;
        font-size: 1.5rem;
        color: #ff4d4d;
        margin-top: 20px;
    }

    .quantity-btn {
        border: 1px solid;
        width: 30px;
    }
</style>
<section class="products" id="products">

    <h1 class="heading"><span>latest</span> products</h1>

    <div class="box-container">
        @if(Model is null || !(Model.Any()))
        {
            <div class="no-products">
                <h2>No products available</h2>
            </div>
        } else
        {
            @foreach (var product in Model)
            {
                <div class="box">

                    <div class="image">
                        <img src=@Url.Content($"~{product.Image}") alt="">
                    </div>
                    <div class="content">
                        <h3>@product.Name</h3>
                        <div class="price">@product.SellingPrice</div>
                        <div class="stars">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <span>Quantities : @product.Quantity</span>
                        </div>
                        <div>
                            @if (product.Quantity <= 0)
                            {
                                <span style="display: flex; justify-content: center; color: red; font-size: 20px;">Sold Out</span>
                            } else
                            {
                                <div class="quantity-controls" style="display: flex; justify-content: center;">
                                    <button class="quantity-btn" onclick="decrementQuantity(this)" style="border-right: 0;">-</button>
                                    <label style="border: 1px solid;">
                                        <input type="text" class="quantity-input" value="1" min="1" data-max="@product.Quantity" style="text-align: center; width: 50px;">
                                    </label>
                                    <button class="quantity-btn" onclick="incrementQuantity(this)" style="border-left: 0;">+</button>
                                </div>
                                <form asp-controller="Cart" asp-action="AddToCart" method="post" onsubmit="return updateQuantity(this)" style="display: flex; flex-direction: column;">
                                    <input type="hidden" name="productId" value="@product.ProductId" />
                                    <input type="hidden" name="quantity" value="" class="quantity-hidden" />
                                    <button type="submit" class="btn" style="display: flex; justify-content: center;"><p>Add To Cart</p><i class="fa-solid fa-cart-shopping"></i></button>
                                </form>
                            }
                        </div>

                    </div>
                </div>
            }
        }
    </div>
</section>
<script>
    function updateQuantity(form) {
        const quantityInput = form.closest('.box').querySelector('.quantity-input');
        
        const quantityValue = quantityInput.value;

        form.querySelector('.quantity-hidden').value = quantityValue;

        return true;
    }
    function incrementQuantity(button) {
        const input = button.parentElement.querySelector('.quantity-input');
        const max = input.getAttribute('data-max');
        if (parseInt(input.value) < parseInt(max)) {
            input.value = parseInt(input.value) + 1;
        }
    }

    function decrementQuantity(button) {
        const input = button.parentElement.querySelector('.quantity-input');
        if (parseInt(input.value) > 1) {
            input.value = parseInt(input.value) - 1;
        }
    }

    let debounceTimeout;
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('input', () => {
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => {
                const max = parseInt(input.getAttribute('data-max'));
                let value = parseInt(input.value);

                if (isNaN(value) || value < 1) {
                    input.value = 1;
                } else if (value > max) {
                    input.value = max;
                }
            }, 300);
        });
    });
</script>